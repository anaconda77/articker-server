name: CD for Canary Deployment

on:
  # 수동 실행 옵션(main에 푸시되어도 자동으로 실행되지 않음)
  workflow_dispatch:
    inputs:
      duration:
        description: '배포 총 소요 시간 (시간 단위)'
        required: true
        default: '9'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push to Docker Hub
        id: build-image
        run: |
          IMAGE_TAG=${{ github.sha }}
          REPO_NAME=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')
          DOCKER_REPO="${{ secrets.DOCKERHUB_USERNAME }}/${REPO_NAME}"
          docker build -t $DOCKER_REPO:$IMAGE_TAG .
          docker push $DOCKER_REPO:$IMAGE_TAG
          echo "IMAGE_NAME=$DOCKER_REPO:$IMAGE_TAG" >> $GITHUB_ENV
          echo "image_name=$DOCKER_REPO:$IMAGE_TAG" >> "$GITHUB_OUTPUT"

      - name: Create CodeDeploy bundle
        run: |
          mkdir -p deploy
          echo "${{ steps.build-image.outputs.image_name }}" > deploy/image_name.txt
          cp appspec.yml docker-compose.yml deploy/
          cp -r scripts deploy/
          cd deploy && zip -r ../deploy.zip .

      - name: Upload CodeDeploy bundle to S3
        run: aws s3 cp deploy.zip s3://articker-codedeploy-revisions-bucket/${{ github.sha }}.zip

      - name: Start CodeDeploy deployment
        id: start-deployment
        run: |
          DEPLOYMENT_ID=$(aws deploy create-deployment \
            --application-name articker-application \
            --deployment-group-name articker-dg-canary \
            --s3-location bucket=articker-codedeploy-revisions-bucket,key=${{ github.sha }}.zip,bundleType=zip \
            --query "deploymentId" --output text)
          echo "DEPLOYMENT_ID=$DEPLOYMENT_ID" >> $GITHUB_ENV
          echo "deployment_id=$DEPLOYMENT_ID" >> "$GITHUB_OUTPUT"

      - name: Wait for CodeDeploy to be ready
        run: |
          echo "Waiting for deployment ${{ env.DEPLOYMENT_ID }} to be ready..."
          aws deploy wait deployment-successful --deployment-id ${{ env.DEPLOYMENT_ID }}

      - name: Start Step Functions execution
        run: |
          echo "Starting Step Functions with duration: ${{ github.event.inputs.duration }} hours"
          SFN_INPUT=$(jq -n \
            --arg duration "${{ github.event.inputs.duration }}" \
            --arg deploymentId "${{ steps.start-deployment.outputs.deployment_id }}" \
            '{ "total_duration_hours": ($duration | tonumber), "detail": { "deploymentId": $deploymentId } }')
          aws stepfunctions start-execution \
            --state-machine-arn "${{ secrets.STATE_MACHINE_ARN }}" \
            --input "$SFN_INPUT"