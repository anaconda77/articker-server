name: CD for Canary Deployment

on:
  # 수동 실행 옵션(main에 푸시되어도 자동으로 실행되지 않음)
  workflow_dispatch:
    inputs:
      duration:
        description: '배포 총 소요 시간 (시간 단위)'
        required: true
        default: '9'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Define image name and tag
        run: |
          REPO_NAME=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')
          IMAGE_NAME="${{ secrets.DOCKERHUB_USERNAME }}/${REPO_NAME}:${{ github.sha }}"
          echo "IMAGE_NAME=${IMAGE_NAME}" >> $GITHUB_ENV

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create new Launch Template Version
        id: create_lt_version
        run: |
          VERSION=$(aws ec2 create-launch-template-version \
          --launch-template-id ${{ secrets.LAUNCH_TEMPLATE_ID }} \
          --version-description "Image tag ${{ env.IMAGE_NAME }}" \
          --source-version '$Latest' \
          --query "LaunchTemplateVersion.VersionNumber" --output text)
          echo "lt_version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Start Step Functions execution
        run: |
          SFN_INPUT=$(jq -n \
            --arg duration "${{ github.event.inputs.duration }}" \
            --arg lt_version "${{ steps.create_lt_version.outputs.lt_version }}" \
            --arg image_tag "${{ env.IMAGE_NAME }}" \
            '{ "total_duration_hours": ($duration | tonumber), "launchTemplateVersion": $lt_version, "imageTag": $image_tag }')
          aws stepfunctions start-execution \
            --state-machine-arn "${{ secrets.STATE_MACHINE_ARN }}" \
            --input "$SFN_INPUT"